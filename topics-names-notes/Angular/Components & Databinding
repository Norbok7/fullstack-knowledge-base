#  decorator this one helps to input from outside
@Input() , and import it  
import {Component, Input} from '@angular/core';
if you add this decorator you can bind to it with other parent components
any component can bind to this if they are hosting this component
assign alias 'string' inside input('catdog') now to call u call it with catdog
# decorator #2 helps to listen from outside
@Output() copy other steps above.

#decorator #3
@viewChild()
@ViewChild('serverContentInput', {static: true}) serverContentInput: ElementRef;

#decorator #4
@ContentChild('contentParagraph', {static: true}) paragraph: ElementRef;

# reusable widgets
<ng-content></ng-content> allows information added to be serverContentInput

#ngOnInit() {}
this is a lifecyclehook, they are used to run code at certain points in time

# LOCAL REFERENCE
how to create local REFERENCE
say #'string' this is now a local reference in html
for example <p #cat></p>
cat is now a local reference

